<?xml-model href="teipublisher_odds.xsd"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>Zacuto's Letters</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl><rendition source="zacuto-theme.css"/></tagsDecl></encodingDesc><revisionDesc>
            <change when="2021-03-11+01:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="zacuto-letters" source="teipublisher.odd"> <elementSpec ident="add" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: '&lt;';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '&gt;';
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="app" mode="add"><model output="print" predicate="not($parameters?view='edition')" behaviour="inline" cssClass="lem">
            <desc>Trying to highlight textual variants across different views.</desc>
            <param name="content" value="."/>
            <param name="key" value="@xml:id"/>
            <pb:template xmlns="" xml:space="preserve"><pb-highlight key="[[key]]" highlight-self="highlight-self">[[content]]</pb-highlight></pb:template>
        </model><modelSequence>
            <model predicate="$parameters?view='edition'" behaviour="inline">
                <desc>reading text markiert Textvarianten nicht.</desc>
                <param name="content" value="lem"/>
            </model>
            <model predicate="$parameters?view='A4732' or $parameters?view='B459' or $parameters?view='BJTS' or $parameters?view='L9165' or $parameters?view='N3836' or $parameters?view='N3820' or $parameters?view='V1761' or $parameters?view='W66' or $parameters?view='N3761' or $parameters?view='L1780'" behaviour="inline" cssClass="lem">
                <desc>Parameter um Leithandschriften auch in Synopse anzuzeigen – AUF VOLLSTÄNDIGKEIT PRÜFEN! Nur notwendig wenn wir tatsächlich mehrere Textzeugen in die Edition aufnehmen.</desc>
                <param name="content" value="lem"/>
                <param name="key" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-highlight key="[[key]]" highlight-self="highlight-self">[[content]]</pb-highlight></pb:template>
            </model>
            <model output="web" predicate="not($parameters?view='edition')" behaviour="inline" cssClass="lem">
                <param name="content" value="rdg"/>
                <param name="key" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-highlight key="[[key]]" highlight-self="highlight-self">[[content]]</pb-highlight></pb:template>
            </model>
            <model output="print" predicate="$parameters?view='edition'" behaviour="inline" cssClass="lem">
                <desc>Display textual variants as popover in edition view. At the moment I can only show the first variant, PLUS the lemma. NEEDS MORE WORK</desc>
                <param name="content" value="lem"/>
                <param name="alternate" value="if (string(rdg[1]) != '') then . else 'omitted'"/>
                <param name="persistent" value="true()"/>
                <param name="altLabel" value="rdg[1]/(substring-after(@wit, '#'))"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover theme="material" placement="top">[[content]]<span slot="alternate">[[altLabel]]] [[alternate]]</span></pb-popover></pb:template>
            </model>
        </modelSequence><model behaviour="inline"/></elementSpec>
                <elementSpec ident="lem" mode="add"><model predicate="$parameters?view='W66' and not(contains(@wit, '#W66'))" behaviour="omit"/><model predicate="$parameters?view='L9165' and not(contains(@wit, '#L9165'))" behaviour="omit" cssClass="lem"/><model predicate="$parameters?view='N3761' and not(contains(@wit, '#N3761'))" behaviour="omit" cssClass="lem">
            <desc>N3761</desc>
        </model><model predicate="$parameters?view='L1780' and not(contains(@wit, '#L1780'))" behaviour="omit" cssClass="lem">
            <desc>L1780</desc>
        </model></elementSpec>
                <elementSpec ident="author" mode="change"><model predicate="parent::titleStmt" behaviour="omit">
            <desc>Wird in der Indexliste nicht angezeigt</desc>
        </model><model predicate="ancestor::teiHeader" behaviour="block">
            <outputRendition xml:space="preserve" scope="before">
            content: 'By ';
            </outputRendition>
        </model><model behaviour="inline"/></elementSpec>
                <elementSpec ident="bibl" mode="change"><model predicate="parent::cit and not($parameters?view='edition')" behaviour="omit"/><model predicate="parent::person" behaviour="block">
            <param name="uri" value="@path"/>
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[uri]]">[[content]]</a></pb:template>
        </model><model predicate="parent::listBibl" behaviour="listItem"/><model behaviour="inline"/></elementSpec>
                <elementSpec ident="birth" mode="add"><model predicate="exists(birth)" behaviour="inline">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">Birth: [[content]]</pb:template>
        </model></elementSpec>
                <elementSpec ident="cit" mode="change"><model predicate="not($parameters?view='edition')" behaviour="inline"/><model predicate="child::quote and child::bibl and $parameters?view='edition'" behaviour="inline">
            <desc>Insert citation </desc>
            <param name="content" value="quote"/>
            <param name="alternate" value="bibl"/>
            <param name="persistent" value="true()"/>
            <param name="name" value="'pb-popover' and 'pb-link'"/>
            <param name="path" value="bibl/@path"/>
            <param name="xid" value="bibl/@xml-id"/>
            <param name="odd" value="bibl/@odd"/>
            <pb:template xmlns="" xml:space="preserve"><pb-link id="[[alternate]]" path="[[path]]" xml-id="[[xid]]" odd="[[odd]]" subscribe="quote" emit="quote">[[content]]</pb-link>
<pb-popover theme="material" placement="bottom" for="[[alternate]]">[[alternate]]</pb-popover></pb:template>
            <outputRendition xml:space="preserve">
            text-color: none;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="title" mode="change"><model predicate="@level=&#34;s&#34;" behaviour="omit"/><model behaviour="inline"/><model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="5"/>
        </model><modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="omit">
                <param name="content" value="' — '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence><model predicate="not(@level) and parent::bibl" behaviour="inline"/><modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="omit">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="omit">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence><model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="death" mode="add"><model predicate="exists(death)" behaviour="inline">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">Death: [[content]]</pb:template>
        </model></elementSpec>
                <elementSpec ident="del" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: '{';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '}';
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="idno" mode="add"><model predicate="parent::correspAction" behaviour="omit"/><model predicate="@source='isni'" behaviour="block">
            <param name="uri" value="'https://isni.org/isni/' ||  replace(string(), ' ', '') || ''"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[uri]]" target="_blank">ISNI</a><paper-icon-button icon="icons:link"/></pb:template>
            <outputRendition xml:space="preserve">
            content: ' ';
            </outputRendition>
        </model><model predicate="@source='gnd'" behaviour="block">
            <param name="uri" value="'https://d-nb.info/gnd/' || string() || '/'"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[uri]]" target="_blank">GND</a><paper-icon-button icon="icons:link"/></pb:template>
            <outputRendition xml:space="preserve">
            content: ' ';
            </outputRendition>
        </model><model predicate="@source='jE'" behaviour="block">
            <param name="uri" value="(.)"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[uri]]" target="_blank">Jewish Encyclopedia</a><paper-icon-button icon="icons:link"/></pb:template>
            <outputRendition xml:space="preserve">
            content: ' ';
            </outputRendition>
        </model><model predicate="@source='treccani'" behaviour="block">
            <param name="uri" value="(.)"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[uri]]" target="_blank">Treccani</a><paper-icon-button icon="icons:link"/></pb:template>
            <outputRendition xml:space="preserve">
            content: ' ';
            </outputRendition>
        </model><model predicate="@source='viaf'" behaviour="block">
            <param name="uri" value="'http://viaf.org/viaf/' || replace(string(), ' ', '') || '/'"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[uri]]" target="_blank">VIAF</a><paper-icon-button icon="icons:link"/></pb:template>
            <outputRendition xml:space="preserve">
            content: ' ';
            </outputRendition>
        </model><model predicate="@source='wikidata'" behaviour="block">
            <param name="uri" value="'https://www.wikidata.org/wiki/' || string() || ''"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[uri]]" target="_blank">Wikidata</a><paper-icon-button icon="icons:link"/></pb:template>
            <outputRendition xml:space="preserve">
            content: ' ';
            </outputRendition>
        </model><model predicate="parent::person" behaviour="listItem"/></elementSpec>
                <elementSpec ident="note" mode="change"><model predicate="@type='bioSummary'" behaviour="block"/><model predicate="@type='summary'" behaviour="inline"/><model predicate="parent::person" behaviour="inline"/><model predicate="parent::place" behaviour="block"/><model behaviour="note">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model></elementSpec>
                <elementSpec ident="pb" mode="change"><model predicate="$parameters?view='edition'" behaviour="omit"/><model predicate="$parameters?view='L1780' and not(contains(@edRef, '#L1780'))" behaviour="omit"/><model predicate="$parameters?view='N3761' and not(contains(@edRef, '#N3761'))" behaviour="omit"/><model behaviour="break" useSourceRendition="true">
            <param name="type" value="'page'"/>
            <param name="label" value="(concat(if(@n) then concat(@n,' ') else '', if(@facs) then concat('@',@facs) else ''))"/>
            <outputRendition xml:space="preserve">
            display: block; margin-left: 4pt; color: grey; float: right;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="before">
            content: '|f. ';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '|';
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="persName" mode="add"><model predicate="parent::correspAction" behaviour="inline">
            <param name="content" value="."/>
            <param name="id" value="@key"/>
            <pb:template xmlns="" xml:space="preserve"><a href="http://localhost:8080/exist/apps/zacutos-letters/persons/[[id]].xml"><paper-icon-button icon="social:person"/>[[content]]</a></pb:template>
        </model><model predicate="@type='main' and @xml:lang='he' and $parameters?view='biogram'" behaviour="block">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">Full Name Hebrew: [[content]]</pb:template>
        </model><model predicate="@type='main' and @xml:lang='en' and $parameters?view='biogram'" behaviour="block">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">Full Name English: [[content]]</pb:template>
        </model><model output="print" predicate="parent::person and @type='he'" behaviour="omit"/><model predicate="ancestor::text and $parameters?view='edition'" behaviour="alternate" cssClass="persName">
            <param name="default" value="."/>
            <param name="alternate" value="id(@key, doc(&#34;/db/apps/zacutos-letters/data/people.xml&#34;))"/>
        </model><model behaviour="inline">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            font-weight: bold;
border-bottom: 1px solid #A0A0A0;
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="person" mode="add"><modelSequence predicate="$parameters?view='letterList'">
            <model predicate="exists(linkGrp[@type=&#34;sender&#34;])" behaviour="heading">
                <desc>Letters Sent Head</desc>
                <param name="content" value="'Letters Sent'"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                font-weight: 200;
border-bottom: 1px solid #A0A0A0;
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model predicate="exists(linkGrp[@type=&#34;sender&#34;])" behaviour="block">
                <desc>Letters Sent Content</desc>
                <param name="content" value="linkGrp[@type=&#34;sender&#34;]"/>
            </model>
            <model predicate="exists(linkGrp[@type=&#34;adressee&#34;])" behaviour="heading">
                <desc>Letters Received Head</desc>
                <param name="content" value="'Letters Received'"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                font-weight: 200;
border-bottom: 1px solid #A0A0A0;
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model predicate="exists(linkGrp[@type=&#34;adressee&#34;])" behaviour="block">
                <desc>Letters Received Content</desc>
                <param name="content" value="linkGrp[@type=&#34;adressee&#34;]"/>
            </model>
            <model predicate="exists(linkGrp[@type=&#34;mentioned-by-zacuto&#34;])" behaviour="heading">
                <desc>Letters Mentioned by Zacuto Head</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Mentioned in Letters by Zacuto'"/>
                <outputRendition xml:space="preserve">
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                font-weight: 200;
border-bottom: 1px solid #A0A0A0;
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model predicate="exists(linkGrp[@type=&#34;mentioned-by-zacuto&#34;])" behaviour="block">
                <desc>Letters Mentioned by Zacuto Content</desc>
                <param name="content" value="linkGrp[@type=&#34;mentioned-by-zacuto&#34;]"/>
            </model>
            <model predicate="exists(linkGrp[@type=&#34;mentioned-by-other&#34;])" behaviour="heading">
                <desc>Letters Mentioned by Other Head</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Mentioned in Letters by Others'"/>
                <outputRendition xml:space="preserve">
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                font-weight: 200;
border-bottom: 1px solid #A0A0A0;
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model predicate="exists(linkGrp[@type=&#34;mentioned-by-other&#34;])" behaviour="block">
                <desc>Letters Mentioned by Other Content</desc>
                <param name="content" value="linkGrp[@type=&#34;mentioned-by-other&#34;]"/>
            </model>
        </modelSequence><modelSequence predicate="$parameters?view='biogram'">
            <model behaviour="heading">
                <param name="content" value="'Names'"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                font-weight: 200;
border-bottom: 1px solid #A0A0A0;
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="persName"/>
            </model>
            <model predicate="exists(note[@type=&#34;bioSummary&#34;] or death or birth)" behaviour="heading">
                <param name="content" value="'Biography'"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                font-weight: 200;
border-bottom: 1px solid #A0A0A0;
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model behaviour="block">
                <desc>Birth</desc>
                <param name="content" value="birth"/>
                <outputRendition xml:space="preserve" scope="before">
                content: 'Birth: ';
                </outputRendition>
            </model>
            <model behaviour="block">
                <desc>Death</desc>
                <param name="content" value="death"/>
                <outputRendition xml:space="preserve" scope="before">
                content: 'Death: ';
                </outputRendition>
            </model>
            <model predicate="exists(note[@type=&#34;bioSummary&#34;])" behaviour="block">
                <param name="content" value="note[@type=&#34;bioSummary&#34;]"/>
            </model>
            <model predicate="exists(idno)" behaviour="heading">
                <param name="content" value="'External References'"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                font-weight: 200;
border-bottom: 1px solid #A0A0A0;
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model predicate="exists(idno)" behaviour="block">
                <param name="content" value="idno"/>
            </model>
        </modelSequence><model predicate="parent::listPersons" behaviour="inline"/><modelSequence>
            <model behaviour="inline">
                <desc>Person Popover Edition-View</desc>
                <param name="headline" value="persName[@xml:lang=&#34;en&#34; and @type=&#34;full&#34;]"/>
                <param name="bio" value="note[@type=&#34;bioSummary&#34;]"/>
                <param name="id" value="./@xml:id/string()"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover theme="material"><a href="http://localhost:8080/exist/apps/zacutos-letters/persons/[[id]].xml">[[headline]]</a><paper-icon-button icon="social:person"/>[[bio]]</pb-popover></pb:template>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="placeName" mode="add"><model predicate="$parameters?view='edition'" behaviour="alternate" cssClass="placeName">
            <param name="alternate" value="id(@key, doc(&#34;/db/apps/zacutos-letters/data/places.xml&#34;))"/>
            <param name="default" value="."/>
        </model><model predicate="ancestor::text and $parameters?view='edition'" behaviour="alternate">
            <param name="alternate" value="id(@key, doc(&#34;/db/apps/zacutos-letters/data/places.xml&#34;))"/>
            <param name="default" value="."/>
        </model></elementSpec>
                <elementSpec ident="quote" mode="change"><model predicate="not($parameters?view='edition') and ancestor::p" behaviour="inline"/><model predicate="ancestor::p" behaviour="inline" cssClass="quote" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block
                  level</desc>
        </model><model behaviour="block" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block
                  level</desc>
            <outputRendition xml:space="preserve">
            margin-left: 10px; margin-right: 10px;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="sex" mode="add"><model behaviour="inline"/></elementSpec>
                <elementSpec ident="workName" mode="add"><model behaviour="inline" cssClass="workName"/></elementSpec>
            <elementSpec ident="div" mode="change"><model predicate="parent::body or parent::front or parent::back" behaviour="section"/><model behaviour="block"/></elementSpec>
                <elementSpec ident="head" mode="change"><model predicate="parent::div[@type=&#34;verse&#34;]" behaviour="block">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            text-align: center;
text-color: black;
text-size: 1.5em;
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="parent::figure" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::div" behaviour="heading">
            <param name="level" value="count(ancestor::div)"/>
        </model><model behaviour="block"/></elementSpec>
                <elementSpec ident="label" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: "("
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: ")"
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="bold" mode="add"><model behaviour="paragraph">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model></elementSpec>
            <elementSpec ident="rdg" mode="add"><model predicate="$parameters?view='W66' and not(contains(@wit, '#W66'))" behaviour="omit"/><model predicate="$parameters?view='L9165' and not(contains(@wit, '#L9165'))" behaviour="omit"/><model predicate="$parameters?view='N3761' and not(contains(@wit, '#N3761'))" behaviour="omit">
            <desc>N3761</desc>
        </model><model predicate="$parameters?view='L1780' and not(contains(@wit, '#L1780'))" behaviour="omit">
            <desc>L1780</desc>
        </model><model behaviour="inline"/></elementSpec>
                <elementSpec ident="address" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            margin-top: 2em; margin-left: 2em; margin-right: 2em;
                  margin-bottom: 2em;
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="addrLine" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="availability" mode="add"><model behaviour="omit"/></elementSpec>
            <elementSpec ident="licence" mode="change"><model output="web" predicate="@target" behaviour="omit" cssClass="licence">
            <param name="content" value="'Licence'"/>
            <param name="uri" value="@target"/>
        </model><model behaviour="omit"/></elementSpec><elementSpec ident="place" mode="add"><modelSequence predicate="$parameters?view='place'">
            <model behaviour="inline"/>
        </modelSequence><modelSequence>
            <model behaviour="inline">
                <param name="headline" value="placeName[@xml:lang=&#34;en&#34;]"/>
                <param name="description" value="note"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover theme="material"><pb-link path="places/[[id]].xml">[[headline]]</pb-link><paper-icon-button icon="maps:place"/>[[description]]</pb-popover></pb:template>
                <outputRendition xml:space="preserve">
                direction: ltr;
                </outputRendition>
            </model>
        </modelSequence></elementSpec><elementSpec ident="witness" mode="add"><model output="web" behaviour="omit"/></elementSpec><elementSpec ident="p" mode="change"><model predicate="ancestor::msDesc" behaviour="inline"/><model behaviour="paragraph" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            text-align: justify;
            </outputRendition>
        </model></elementSpec><elementSpec ident="link" mode="add"><model predicate="parent::linkGrp" behaviour="listItem">
            <param name="content" value="."/>
            <param name="uri" value="@target"/>
            <pb:template xmlns="" xml:space="preserve"><a href="http://localhost:8080/exist/apps/zacutos-letters/letters/[[uri]].xml">[[content]]</a></pb:template>
        </model></elementSpec><elementSpec ident="linkGrp" mode="add"><model behaviour="inline"/></elementSpec><elementSpec ident="date" mode="change"><model predicate="parent::correspAction" behaviour="omit"/><model output="print" predicate="parent::birth or parent::death" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: '(';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: ');
            </outputRendition>
        </model><model output="print" predicate="text()" behaviour="inline"/><model output="print" predicate="@when and not(text())" behaviour="inline">
            <param name="content" value="@when"/>
        </model><model output="web" predicate="@when" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="@when"/>
        </model><model predicate="text()" behaviour="inline"/></elementSpec><elementSpec ident="text" mode="change"><modelSequence output="print">
            <model predicate="descendant::lem[@wit=&#34;N3761&#34;] or descendant::rdg[@wit=&#34;N3761&#34;]" behaviour="inline">
                <desc>Hiermit will ich template für einen Textzeugen in das HTML laden, wenn dieser Textzeuge auftritt. Funktioniert nicht.</desc>
                <pb:template xmlns="" xml:space="preserve"><template title="New York, JTS 3761">
                                            <pb-view src="document1" class="transcription" xpath="//div[@type='letter']" subscribe="transcription" emit="transcription">
                                                <pb-param name="view" value="N3761"/>
                                            </pb-view>
                                            </template></pb:template>
            </model>
        </modelSequence><model behaviour="body"/></elementSpec><elementSpec ident="q" mode="change"><model predicate="l" behaviour="block" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            margin-left: 10px; margin-right: 10px;
            </outputRendition>
        </model><model predicate="ancestor::p or ancestor::cell" behaviour="inline" useSourceRendition="true">
            <outputRendition xml:space="preserve" scope="before">
            content: '‘';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '’';
            </outputRendition>
        </model><model behaviour="block" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            margin-top: 20px; margin-left: 50px; margin-right: 50px;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="before">
            content: '"';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '"';
            </outputRendition>
        </model></elementSpec><elementSpec ident="msContents" mode="add"/><elementSpec ident="msItem" mode="add"><model behaviour="listItem">
            <param name="title" value="title"/>
            <param name="uri" value="@xml:id"/>
            <param name="locus" value="locus"/>
            <param name="space" value="': '"/>
            <pb:template xmlns="" xml:space="preserve"><a href="http://localhost:8080/exist/apps/zacutos-letters/letters/[[uri]].xml">[[locus]][[space]][[title]]</a></pb:template>
        </model></elementSpec><elementSpec ident="locus" mode="add"><model behaviour="inline">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">fol. [[content]]</pb:template>
        </model></elementSpec><elementSpec ident="material" mode="add"><model behaviour="inline"/></elementSpec><elementSpec ident="support" mode="add"><model behaviour="block">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">Writing Material: [[content]]</pb:template>
        </model></elementSpec><elementSpec ident="physDesc" mode="add"><modelSequence>
            <model behaviour="heading">
                <desc>Material</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Material'"/>
            </model>
            <model behaviour="inline">
                <param name="content" value="objectDesc/supportDesc"/>
            </model>
            <model behaviour="heading">
                <desc>Layout</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Text Layout'"/>
            </model>
            <model behaviour="inline">
                <param name="content" value="objectDesc/layoutDesc"/>
            </model>
            <model behaviour="heading">
                <desc>Script</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Script'"/>
            </model>
            <model behaviour="inline">
                <param name="content" value="handDesc"/>
            </model>
            <model behaviour="heading">
                <desc>Binding</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Binding'"/>
            </model>
            <model behaviour="inline">
                <param name="content" value="bindingDesc"/>
            </model>
        </modelSequence></elementSpec><elementSpec ident="extent" mode="add"><model behaviour="block"/></elementSpec><elementSpec ident="collation" mode="add"><model behaviour="block">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">Quiring: [[content]]</pb:template>
        </model></elementSpec><elementSpec ident="condition" mode="add"><model behaviour="block">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">State of Manuscript: [[content]]</pb:template>
        </model></elementSpec><elementSpec ident="foliation" mode="add"><model behaviour="block">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">Foliation: [[content]]</pb:template>
        </model></elementSpec><elementSpec ident="history" mode="add"><modelSequence>
            <model predicate="exists(origin)" behaviour="heading">
                <desc>Origin</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Production'"/>
            </model>
            <model predicate="exists(origin)" behaviour="inline">
                <param name="content" value="origin"/>
            </model>
            <model predicate="exists(provenance)" behaviour="heading">
                <desc>Provenance</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Provenance'"/>
            </model>
            <model predicate="exists(provenance)" behaviour="inline">
                <param name="content" value="provenance"/>
            </model>
            <model predicate="exists(acquisition)" behaviour="heading">
                <desc>Currently Held</desc>
                <param name="level" value="2"/>
                <param name="content" value="'Currently Held'"/>
            </model>
            <model predicate="exists(acquisition)" behaviour="inline">
                <param name="content" value="acquisition"/>
            </model>
        </modelSequence></elementSpec><elementSpec ident="lb" mode="change"><model predicate="ancestor::msDesc" behaviour="inline">
            <outputRendition xml:space="preserve">
            content: '|';
            </outputRendition>
        </model><model behaviour="break" useSourceRendition="true">
            <param name="type" value="'line'"/>
            <param name="label" value="@n"/>
        </model></elementSpec><elementSpec ident="dimensions" mode="add"><model behaviour="inline">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">([[content]] mm)</pb:template>
        </model></elementSpec><elementSpec ident="depth" mode="add"><model behaviour="inline">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">✕[[content]]</pb:template>
        </model></elementSpec><elementSpec ident="height" mode="add"><model behaviour="inline">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">[[content]]✕</pb:template>
        </model></elementSpec><elementSpec ident="binding" mode="add"/><elementSpec ident="settlement" mode="add"><model predicate="parent::correspAction" behaviour="inline">
            <param name="content" value="."/>
            <param name="id" value="@key"/>
            <pb:template xmlns="" xml:space="preserve"><a href="http://localhost:8080/exist/apps/zacutos-letters/places/[[id]].xml"><paper-icon-button icon="maps:place"/>[[content]]</a></pb:template>
        </model><model behaviour="inline"/></elementSpec><elementSpec ident="measure" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve" scope="after">
            content: " ff.";
            </outputRendition>
        </model></elementSpec><elementSpec ident="TEI" mode="change"><model predicate="$parameters?display='cite-me'" behaviour="pass-through">
            <param name="uri" value="'https://zacuto.kabbalah-editions.org'"/>
            <param name="id" value="/@xml:id"/>
            <pb:template xmlns="" xml:space="preserve"><pb-clipboard label="Click the symbol to copy the citation">de Molière, Maximilian (Ed.),  Digital Corpus of Moses Zacuto's Correspondence. <a href="[[uri]]/letters/[[id]]">[[uri]]/letters/[[id]]</a></pb-clipboard></pb:template>
        </model><model behaviour="document"/></elementSpec></schemaSpec>
        </body>
    </text></TEI>